@using System.Drawing
@inherits PercentBackedBar

@RenderItem

@code {

    public PercentTextBar()
    {
        CapturePointText += (HudComponent comp) =>
        {
            PointText = comp as IPercenter;
            Capture(comp);
        };
        
        PercentTextFragment = @<PercentText Capture=@CapturePointText></PercentText>;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        this.StateHasChanged();
    }

    public IPercenter PointText { get; set; }

    public Action<HudComponent> CapturePointText { get; set; } = (e) => { };

    public RenderFragment PercentTextFragment;
    
    public new RenderFragment RenderItem => 
        @<div class=@("percent-bar "+@Classes) style=@SizingParent>
            @foreach (var b in Bars)
            {
                @b
            }
            @PercentTextFragment
        </div>;
    
    public override decimal Percentage =>
        PointText is null ? 1 : (decimal) PointText.CurrentPoints / PointText.MaxPoints;
    
    public override int ChangePercent(int delta)
    {
        try
        {
    
            if (PointText.CurrentPoints > 0 && delta > 0)
            {
                PointText.CurrentPoints -= delta;

                if (PointText.CurrentPoints <= 0)
                {
                    PointText.CurrentPoints = 0;
                }

                this.StateHasChanged();
                return PointText.CurrentPoints;
            }
            else
            {
                this.StateHasChanged();
                Console.WriteLine("percentage is already minumum");
                return -1;
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }

        return -1;
    }

}