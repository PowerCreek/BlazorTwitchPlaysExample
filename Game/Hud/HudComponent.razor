@code {

    public Dictionary<string, object> Parameters = new Dictionary<string, object>();
    
    private List<string> StyleClasses { get; set; } = new List<string>();

    public virtual List<string> GetStyleClasses()
    {
        return StyleClasses.ToArray().ToList();
    }

    public void AddClass(string value)
    {
        if (!StyleClasses.Contains(value))
            StyleClasses.Add(value);
    }

    public string Classes => string.Join(" ", GetStyleClasses());

    public Action StateChanged => StateHasChanged;
    
    [Parameter]
    public Action<HudComponent> Capture { get; set; } = (e) => { };

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Capture?.Invoke(this);
    }

}